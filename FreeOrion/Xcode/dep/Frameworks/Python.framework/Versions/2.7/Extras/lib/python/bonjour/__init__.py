# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.
# This file is compatible with both classic and new-style classes.

from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_bonjour', [dirname(__file__)])
        except ImportError:
            import _bonjour
            return _bonjour
        if fp is not None:
            try:
                _mod = imp.load_module('_bonjour', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _bonjour = swig_import_helper()
    del swig_import_helper
else:
    import _bonjour
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0



def service_register_callback(*args):
  return _bonjour.service_register_callback(*args)
service_register_callback = _bonjour.service_register_callback

def pyDNSServiceRegister(*args):
  return _bonjour.pyDNSServiceRegister(*args)
pyDNSServiceRegister = _bonjour.pyDNSServiceRegister

def service_browse_callback(*args):
  return _bonjour.service_browse_callback(*args)
service_browse_callback = _bonjour.service_browse_callback

def pyDNSServiceBrowse(*args):
  return _bonjour.pyDNSServiceBrowse(*args)
pyDNSServiceBrowse = _bonjour.pyDNSServiceBrowse

def service_resolve_callback(*args):
  return _bonjour.service_resolve_callback(*args)
service_resolve_callback = _bonjour.service_resolve_callback

def pyDNSServiceResolve(*args):
  return _bonjour.pyDNSServiceResolve(*args)
pyDNSServiceResolve = _bonjour.pyDNSServiceResolve

def service_query_callback(*args):
  return _bonjour.service_query_callback(*args)
service_query_callback = _bonjour.service_query_callback

def pyDNSServiceQueryRecord(*args):
  return _bonjour.pyDNSServiceQueryRecord(*args)
pyDNSServiceQueryRecord = _bonjour.pyDNSServiceQueryRecord
kDNSServiceFlagsMoreComing = _bonjour.kDNSServiceFlagsMoreComing
kDNSServiceFlagsAdd = _bonjour.kDNSServiceFlagsAdd
kDNSServiceFlagsDefault = _bonjour.kDNSServiceFlagsDefault
kDNSServiceFlagsNoAutoRename = _bonjour.kDNSServiceFlagsNoAutoRename
kDNSServiceFlagsShared = _bonjour.kDNSServiceFlagsShared
kDNSServiceFlagsUnique = _bonjour.kDNSServiceFlagsUnique
kDNSServiceFlagsBrowseDomains = _bonjour.kDNSServiceFlagsBrowseDomains
kDNSServiceFlagsRegistrationDomains = _bonjour.kDNSServiceFlagsRegistrationDomains
kDNSServiceErr_NoError = _bonjour.kDNSServiceErr_NoError
kDNSServiceErr_Unknown = _bonjour.kDNSServiceErr_Unknown
kDNSServiceErr_NoSuchName = _bonjour.kDNSServiceErr_NoSuchName
kDNSServiceErr_NoMemory = _bonjour.kDNSServiceErr_NoMemory
kDNSServiceErr_BadParam = _bonjour.kDNSServiceErr_BadParam
kDNSServiceErr_BadReference = _bonjour.kDNSServiceErr_BadReference
kDNSServiceErr_BadState = _bonjour.kDNSServiceErr_BadState
kDNSServiceErr_BadFlags = _bonjour.kDNSServiceErr_BadFlags
kDNSServiceErr_Unsupported = _bonjour.kDNSServiceErr_Unsupported
kDNSServiceErr_NotInitialized = _bonjour.kDNSServiceErr_NotInitialized
kDNSServiceErr_AlreadyRegistered = _bonjour.kDNSServiceErr_AlreadyRegistered
kDNSServiceErr_NameConflict = _bonjour.kDNSServiceErr_NameConflict
kDNSServiceErr_Invalid = _bonjour.kDNSServiceErr_Invalid
kDNSServiceErr_Incompatible = _bonjour.kDNSServiceErr_Incompatible
kDNSServiceClass_IN = _bonjour.kDNSServiceClass_IN
kDNSServiceType_A = _bonjour.kDNSServiceType_A
kDNSServiceType_NS = _bonjour.kDNSServiceType_NS
kDNSServiceType_MD = _bonjour.kDNSServiceType_MD
kDNSServiceType_MF = _bonjour.kDNSServiceType_MF
kDNSServiceType_CNAME = _bonjour.kDNSServiceType_CNAME
kDNSServiceType_SOA = _bonjour.kDNSServiceType_SOA
kDNSServiceType_MB = _bonjour.kDNSServiceType_MB
kDNSServiceType_MG = _bonjour.kDNSServiceType_MG
kDNSServiceType_MR = _bonjour.kDNSServiceType_MR
kDNSServiceType_NULL = _bonjour.kDNSServiceType_NULL
kDNSServiceType_WKS = _bonjour.kDNSServiceType_WKS
kDNSServiceType_PTR = _bonjour.kDNSServiceType_PTR
kDNSServiceType_HINFO = _bonjour.kDNSServiceType_HINFO
kDNSServiceType_MINFO = _bonjour.kDNSServiceType_MINFO
kDNSServiceType_MX = _bonjour.kDNSServiceType_MX
kDNSServiceType_TXT = _bonjour.kDNSServiceType_TXT
kDNSServiceType_RP = _bonjour.kDNSServiceType_RP
kDNSServiceType_AFSDB = _bonjour.kDNSServiceType_AFSDB
kDNSServiceType_X25 = _bonjour.kDNSServiceType_X25
kDNSServiceType_ISDN = _bonjour.kDNSServiceType_ISDN
kDNSServiceType_RT = _bonjour.kDNSServiceType_RT
kDNSServiceType_NSAP = _bonjour.kDNSServiceType_NSAP
kDNSServiceType_NSAP_PTR = _bonjour.kDNSServiceType_NSAP_PTR
kDNSServiceType_SIG = _bonjour.kDNSServiceType_SIG
kDNSServiceType_KEY = _bonjour.kDNSServiceType_KEY
kDNSServiceType_PX = _bonjour.kDNSServiceType_PX
kDNSServiceType_GPOS = _bonjour.kDNSServiceType_GPOS
kDNSServiceType_AAAA = _bonjour.kDNSServiceType_AAAA
kDNSServiceType_LOC = _bonjour.kDNSServiceType_LOC
kDNSServiceType_NXT = _bonjour.kDNSServiceType_NXT
kDNSServiceType_EID = _bonjour.kDNSServiceType_EID
kDNSServiceType_NIMLOC = _bonjour.kDNSServiceType_NIMLOC
kDNSServiceType_SRV = _bonjour.kDNSServiceType_SRV
kDNSServiceType_ATMA = _bonjour.kDNSServiceType_ATMA
kDNSServiceType_NAPTR = _bonjour.kDNSServiceType_NAPTR
kDNSServiceType_KX = _bonjour.kDNSServiceType_KX
kDNSServiceType_CERT = _bonjour.kDNSServiceType_CERT
kDNSServiceType_A6 = _bonjour.kDNSServiceType_A6
kDNSServiceType_DNAME = _bonjour.kDNSServiceType_DNAME
kDNSServiceType_SINK = _bonjour.kDNSServiceType_SINK
kDNSServiceType_OPT = _bonjour.kDNSServiceType_OPT
kDNSServiceType_TKEY = _bonjour.kDNSServiceType_TKEY
kDNSServiceType_TSIG = _bonjour.kDNSServiceType_TSIG
kDNSServiceType_IXFR = _bonjour.kDNSServiceType_IXFR
kDNSServiceType_AXFR = _bonjour.kDNSServiceType_AXFR
kDNSServiceType_MAILB = _bonjour.kDNSServiceType_MAILB
kDNSServiceType_MAILA = _bonjour.kDNSServiceType_MAILA
kDNSServiceType_ANY = _bonjour.kDNSServiceType_ANY

def DNSServiceProcessResult(*args):
  return _bonjour.DNSServiceProcessResult(*args)
DNSServiceProcessResult = _bonjour.DNSServiceProcessResult

def DNSServiceRefSockFD(*args):
  return _bonjour.DNSServiceRefSockFD(*args)
DNSServiceRefSockFD = _bonjour.DNSServiceRefSockFD

def AllocateDNSServiceRef():
  return _bonjour.AllocateDNSServiceRef()
AllocateDNSServiceRef = _bonjour.AllocateDNSServiceRef

def DNSServiceRefDeallocate(*args):
  return _bonjour.DNSServiceRefDeallocate(*args)
DNSServiceRefDeallocate = _bonjour.DNSServiceRefDeallocate

def DNSServiceReconfirmRecord(*args):
  return _bonjour.DNSServiceReconfirmRecord(*args)
DNSServiceReconfirmRecord = _bonjour.DNSServiceReconfirmRecord


